{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red31\green36\blue45;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c16078\c18824\c23137;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww26020\viewh11720\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0
\f0\fs30 \cf2 \cb3 //	1.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create TWO new components: UserInput and UserOutput\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	2.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UserInput should hold an input element, UserOutput two paragraphs\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	3.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Output multiple UserOutput components in the App component (any paragraph texts of your choice)\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	4.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pass a username (of your choice) to UserOutput via props and display it there\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	5.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add state to the App component (=> the username) and pass the username to the UserOutput component\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	6.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a method to manipulate the state (=> an event-handler method)\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	7.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pass the event-handler method reference to the UserInput component and bind it to the input-change event\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 //	8.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure that the new input entered by the user overwrites the old username passed to UserOutput\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add two-way-binding to your input (in UserInput) to also display the starting username\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\cb1 \
\
\
\
\
\
Diff:\
-	concept of passing the event (not calling the bind) ==== removed param\
- changing the state setState parameter. == passed ONLY the required object required in setState and the \'93setState\'94 functionalists }